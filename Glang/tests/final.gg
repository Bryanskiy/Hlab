current_surf[240000];
tmp_surf[240000];

fn draw() {
    x = 0;
    y = 0;

    while (x < 600) {
        while(y < 400) {

            surf_val = current_surf[x + 600 * y];
            __glang_put_pixel(x, y, surf_val);

            y = y + 1;            
        }
        y = 0;
        x = x + 1;
    }

    __glang_flush();
    return 0;
}

fn init_world() {
    x = 0;
    y = 0;

    while (x < 600) {
        while(y < 400) {

            id = x + y * 600;
            current_surf[id] = __glang_rand() % 16;

            y = y + 1;            
        }
        y = 0;
        x = x + 1;
    }

    return 0;
}

fn neighbors_count(x, y, state) {
    ret = 0;
    current_x = x - 1;
    current_y = y - 1;

    while(current_x <= x + 1) {

        while(current_y <= y + 1) {

            if((current_x == x) && (current_y == y)) {
                break;
            }

            if ((current_x < 0) || (current_x >= 600)) {
                break;
            }

            if ((current_y < 0) || current_y >= 400) {
                break;
            }

            if (current_surf[current_x + 600 * current_y] == state) {
                ret = ret + 1;
            }

            current_y = current_y + 1;
        }
        current_y = y - 1;
        current_x = current_x + 1;
    }

    return ret;
}

fn update() {
    x = 0;
    y = 0;
    successor = 0;
    neighbors = 0;
    new_st = 0;

    while (x < 600) {
        while(y < 400) {

            current_state = current_surf[x + y * 600];
            if (current_state == 0) {
                successor = 15;
            } 

            if (current_state != 0) {
                successor = current_state - 1;
            }

            neighbors = neighbors_count(x, y, successor);
            new_st = current_state;

            if(neighbors >= 1) {
                new_st = successor;
            }
            
            tmp_surf[x + y * 600] = new_st;

            y = y + 1;            
        }
        y = 0;
        x = x + 1;
    }

    return 0;
}

fn swap() {
    x = 0;
    y = 0;

    while (x < 600) {
        while(y < 400) {

            id = x + y * 600;
            tmp = current_surf[id];
            current_surf[id] = tmp_surf[id];
            tmp_surf[id] = tmp;

            y = y + 1;            
        }
        y = 0;
        x = x + 1;
    }

    return 0;
}

fn main() {
    width = 600;
    height = 400;
    __glang_init_window(width, height);

    init_world();
    true = 1;
    while(true == 1) {
        draw();
        update();
        swap();
    }

    return 0;
}